// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#ifndef INCLUDED_Reg
#define INCLUDED_Reg

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(Reg)



class HXCPP_CLASS_ATTRIBUTES Reg_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Reg_obj OBJ_;
		Reg_obj();

	public:
		enum { _hx_ClassId = 0x003e9134 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="Reg")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"Reg"); }

		hx::ObjectPtr< Reg_obj > __new() {
			hx::ObjectPtr< Reg_obj > __this = new Reg_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< Reg_obj > __alloc(hx::Ctx *_hx_ctx) {
			Reg_obj *__this = (Reg_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Reg_obj), false, "Reg"));
			*(void **)__this = Reg_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Reg_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Reg","\x34","\x91","\x3e","\x00"); }

		static void __boot();
		static int velocidadBala;
		static int velocidadPlayerRIGHT;
		static int velocidadPlayerLEFT;
		static int velocidadPlayerIDLE;
		static int cantVidas;
		static int balaCont;
		static int cantMaxBalas;
};


#endif /* INCLUDED_Reg */ 
