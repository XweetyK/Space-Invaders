// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_Reg
#include <Reg.h>
#endif
#ifndef INCLUDED_entities_AlienBala
#include <entities/AlienBala.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_FlxGame
#include <flixel/FlxGame.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_FlxState
#include <flixel/FlxState.h>
#endif
#ifndef INCLUDED_flixel_animation_FlxAnimationController
#include <flixel/animation/FlxAnimationController.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedGroup
#include <flixel/group/FlxTypedGroup.h>
#endif
#ifndef INCLUDED_flixel_math_FlxPoint
#include <flixel/math/FlxPoint.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxPooled
#include <flixel/util/IFlxPooled.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_DisplayObject
#include <openfl/_legacy/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_DisplayObjectContainer
#include <openfl/_legacy/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_IBitmapDrawable
#include <openfl/_legacy/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_InteractiveObject
#include <openfl/_legacy/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_Sprite
#include <openfl/_legacy/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl__legacy_events_EventDispatcher
#include <openfl/_legacy/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl__legacy_events_IEventDispatcher
#include <openfl/_legacy/events/IEventDispatcher.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_8a3ca304d374c33f_17_new,"entities.AlienBala","new",0xc2b96e00,"entities.AlienBala.new","entities/AlienBala.hx",17,0x2b12cef1)
static const int _hx_array_data_ba72ae0e_1[] = {
	(int)0,(int)1,(int)0,(int)1,
};
HX_LOCAL_STACK_FRAME(_hx_pos_8a3ca304d374c33f_29_update,"entities.AlienBala","update",0xc2022c69,"entities.AlienBala.update","entities/AlienBala.hx",29,0x2b12cef1)
HX_LOCAL_STACK_FRAME(_hx_pos_8a3ca304d374c33f_39_destroy,"entities.AlienBala","destroy",0x869b1a9a,"entities.AlienBala.destroy","entities/AlienBala.hx",39,0x2b12cef1)
namespace entities{

void AlienBala_obj::__construct( ::Dynamic X, ::Dynamic Y, ::Dynamic SimpleGraphic){
            	HX_STACKFRAME(&_hx_pos_8a3ca304d374c33f_17_new)
HXLINE(  18)		super::__construct(X,Y,SimpleGraphic);
HXLINE(  20)		this->loadGraphic(HX_("assets/images/disp.png",48,58,d6,ba),true,(int)4,(int)4,null(),null());
HXLINE(  22)		this->velocity->set_y((int)30);
HXLINE(  24)		this->animation->add(HX_("alien",07,55,91,21),::Array_obj< int >::fromData( _hx_array_data_ba72ae0e_1,4),(int)3,true,null(),null());
HXLINE(  25)		this->animation->play(HX_("alien",07,55,91,21),null(),null(),null());
HXLINE(  26)		this->updateHitbox();
            	}

Dynamic AlienBala_obj::__CreateEmpty() { return new AlienBala_obj; }

void *AlienBala_obj::_hx_vtable = 0;

Dynamic AlienBala_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< AlienBala_obj > _hx_result = new AlienBala_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2]);
	return _hx_result;
}

bool AlienBala_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x25a685e0) {
		if (inClassId<=(int)0x0b6ffd77) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x0b6ffd77;
		} else {
			return inClassId==(int)0x25a685e0;
		}
	} else {
		return inClassId==(int)0x2e105115 || inClassId==(int)0x7fcabcf2;
	}
}

void AlienBala_obj::update(Float elapsed){
            	HX_STACKFRAME(&_hx_pos_8a3ca304d374c33f_29_update)
HXLINE(  30)		this->super::update(elapsed);
HXLINE(  31)		if ((this->y > ::flixel::FlxG_obj::height)) {
HXLINE(  34)			this->destroy();
HXLINE(  35)			::Reg_obj::balaCont--;
            		}
            	}


void AlienBala_obj::destroy(){
            	HX_STACKFRAME(&_hx_pos_8a3ca304d374c33f_39_destroy)
HXLINE(  40)		::flixel::FlxG_obj::game->_state->remove(hx::ObjectPtr<OBJ_>(this),null()).StaticCast<  ::flixel::FlxBasic >();
HXLINE(  41)		this->super::destroy();
            	}



hx::ObjectPtr< AlienBala_obj > AlienBala_obj::__new( ::Dynamic X, ::Dynamic Y, ::Dynamic SimpleGraphic) {
	hx::ObjectPtr< AlienBala_obj > __this = new AlienBala_obj();
	__this->__construct(X,Y,SimpleGraphic);
	return __this;
}

hx::ObjectPtr< AlienBala_obj > AlienBala_obj::__alloc(hx::Ctx *_hx_ctx, ::Dynamic X, ::Dynamic Y, ::Dynamic SimpleGraphic) {
	AlienBala_obj *__this = (AlienBala_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(AlienBala_obj), true, "entities.AlienBala"));
	*(void **)__this = AlienBala_obj::_hx_vtable;
	__this->__construct(X,Y,SimpleGraphic);
	return __this;
}

AlienBala_obj::AlienBala_obj()
{
}

hx::Val AlienBala_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"update") ) { return hx::Val( update_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"destroy") ) { return hx::Val( destroy_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *AlienBala_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *AlienBala_obj_sStaticStorageInfo = 0;
#endif

static ::String AlienBala_obj_sMemberFields[] = {
	HX_HCSTRING("update","\x09","\x86","\x05","\x87"),
	HX_HCSTRING("destroy","\xfa","\x2c","\x86","\x24"),
	::String(null()) };

static void AlienBala_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(AlienBala_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void AlienBala_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(AlienBala_obj::__mClass,"__mClass");
};

#endif

hx::Class AlienBala_obj::__mClass;

void AlienBala_obj::__register()
{
	hx::Object *dummy = new AlienBala_obj;
	AlienBala_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("entities.AlienBala","\x0e","\xae","\x72","\xba");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = AlienBala_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(AlienBala_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< AlienBala_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = AlienBala_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = AlienBala_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = AlienBala_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace entities
