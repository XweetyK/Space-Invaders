// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_entities_Barrera
#include <entities/Barrera.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_animation_FlxAnimationController
#include <flixel/animation/FlxAnimationController.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_670aa0dffcec8005_18_new,"entities.Barrera","new",0x60abaf1a,"entities.Barrera.new","entities/Barrera.hx",18,0xc3e29cd7)
static const int _hx_array_data_69f3da28_1[] = {
	(int)0,(int)0,
};
HX_LOCAL_STACK_FRAME(_hx_pos_670aa0dffcec8005_27_update,"entities.Barrera","update",0xef5e178f,"entities.Barrera.update","entities/Barrera.hx",27,0xc3e29cd7)
namespace entities{

void Barrera_obj::__construct(int X,int Y){
            	HX_STACKFRAME(&_hx_pos_670aa0dffcec8005_18_new)
HXLINE(  19)		super::__construct(X,Y,null());
HXLINE(  20)		this->loadGraphic(HX_("assets/images/barricade.png",19,ce,b6,81),true,(int)16,(int)8,null(),null());
HXLINE(  21)		this->animation->add(HX_("alien",07,55,91,21),::Array_obj< int >::fromData( _hx_array_data_69f3da28_1,2),(int)3,true,null(),null());
HXLINE(  22)		this->animation->play(HX_("alien",07,55,91,21),null(),null(),null());
            	}

Dynamic Barrera_obj::__CreateEmpty() { return new Barrera_obj; }

void *Barrera_obj::_hx_vtable = 0;

Dynamic Barrera_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Barrera_obj > _hx_result = new Barrera_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool Barrera_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x25a685e0) {
		if (inClassId<=(int)0x0b6ffd77) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x0b6ffd77;
		} else {
			return inClassId==(int)0x25a685e0;
		}
	} else {
		return inClassId==(int)0x25a7c588 || inClassId==(int)0x2e105115;
	}
}

void Barrera_obj::update(Float elapsed){
            	HX_STACKFRAME(&_hx_pos_670aa0dffcec8005_27_update)
HXDLIN(  27)		this->super::update(elapsed);
            	}



hx::ObjectPtr< Barrera_obj > Barrera_obj::__new(int X,int Y) {
	hx::ObjectPtr< Barrera_obj > __this = new Barrera_obj();
	__this->__construct(X,Y);
	return __this;
}

hx::ObjectPtr< Barrera_obj > Barrera_obj::__alloc(hx::Ctx *_hx_ctx,int X,int Y) {
	Barrera_obj *__this = (Barrera_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Barrera_obj), true, "entities.Barrera"));
	*(void **)__this = Barrera_obj::_hx_vtable;
	__this->__construct(X,Y);
	return __this;
}

Barrera_obj::Barrera_obj()
{
}

hx::Val Barrera_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"update") ) { return hx::Val( update_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Barrera_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Barrera_obj_sStaticStorageInfo = 0;
#endif

static ::String Barrera_obj_sMemberFields[] = {
	HX_HCSTRING("update","\x09","\x86","\x05","\x87"),
	::String(null()) };

static void Barrera_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Barrera_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Barrera_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Barrera_obj::__mClass,"__mClass");
};

#endif

hx::Class Barrera_obj::__mClass;

void Barrera_obj::__register()
{
	hx::Object *dummy = new Barrera_obj;
	Barrera_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("entities.Barrera","\x28","\xda","\xf3","\x69");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Barrera_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Barrera_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Barrera_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Barrera_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Barrera_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Barrera_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace entities
